{"version":3,"sources":["Layout.tsx","components/pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonTable/PersonTable.tsx","components/pages/PeoplePage.tsx","components/pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","Layout","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","born","died","fatherName","motherName","slug","father","mother","urlSlug","useParams","getClassByGender","gender","getParentsInfo","parentName","personFromData","PersonTable","people","map","PeoplePage","useState","peopleFromServer","setPeopleFromServer","isLoading","setIsLoading","errorMessage","setErrorMessage","isResponseSuccessfull","preparedPeopleData","preparedPeople","find","useEffect","catch","finally","length","NotFoundPage","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d788f7f6.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './Layout.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const Layout = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    father,\n    mother,\n  } = person;\n\n  const { slug: urlSlug } = useParams();\n\n  const getClassByGender = (gender: string) => {\n    return classNames({\n      'has-text-danger': gender === 'f',\n    });\n  };\n\n  const getParentsInfo = (\n    parentName: string | null,\n    personFromData: Person | undefined,\n  ) => {\n    if (parentName && personFromData) {\n      return (\n        <Link\n          to={`${personFromData.slug}`}\n          className={getClassByGender(personFromData.sex)}\n        >\n          {parentName}\n        </Link>\n      );\n    }\n\n    if (parentName) {\n      return `${parentName}`;\n    }\n\n    return '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === urlSlug,\n      })}\n    >\n      <td>\n        <Link to={`${slug}`} className={getClassByGender(sex)}>\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>{getParentsInfo(motherName, mother)}</td>\n      <td>{getParentsInfo(fatherName, father)}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PersonTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonLink person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PersonTable } from '../PersonTable/PersonTable';\n\nexport const PeoplePage = () => {\n  const [peopleFromServer, setPeopleFromServer]\n    = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const isResponseSuccessfull = peopleFromServer && !isLoading && !errorMessage;\n\n  const preparedPeopleData = (people: Person[]) => {\n    const preparedPeople = people.map(person => {\n      let mother;\n      let father;\n\n      if (person.motherName) {\n        mother = people.find(({ name }) => person.motherName === name);\n      }\n\n      if (person.fatherName) {\n        father = people.find(({ name }) => person.fatherName === name);\n      }\n\n      return { ...person, mother, father };\n    });\n\n    setPeopleFromServer(preparedPeople);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(preparedPeopleData)\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {isResponseSuccessfull && (\n            peopleFromServer.length > 0 ? (\n              <PersonTable people={peopleFromServer} />\n            ) : (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => <h1 className=\"title\">Page not found</h1>;\n","import {\n  HashRouter as Router, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { HomePage } from './components/pages/HomePage';\nimport { PeoplePage } from './components/pages/PeoplePage';\nimport { NotFoundPage } from './components/pages/NotFoundPage';\n\nexport const App = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <App />,\n  );\n"],"sourceRoot":""}